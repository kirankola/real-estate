
// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier')
contract('Verifier', accounts => {
   // - use the contents from proof.json generated from zokrates steps
    const proofs = require('../../zokrates/code/square/proof.json')
    beforeEach(async () => {
      this.contract = await Verifier.new({ from: accounts[0] })
     
    })
 // Test verification with correct proof
 it('VerifyTx returns true with correct proof', async () => {
    const result = await this.contract.verifyTx(
      proofs["2"].proof.a,
            
      proofs["2"].proof.b,

      proofs["2"].proof.c,
      
      proofs["2"].inputs
    )
  assert(result, 'Wrong proof check result')
  })

// Test verification with incorrect proof
it('VerifyTx returns false with incorrect proof', async () => {
    const inp=[25,1] // wrong input to create a failed verification
    const result = await this.contract.verifyTx.call(
      proofs["1"].proof.a,
            
      proofs["1"].proof.b,
        
      proofs["1"].proof.c,
        
        inp
  )
  assert(!result, 'Proof check result should be false')
})
})

 

    



            